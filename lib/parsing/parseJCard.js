"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _core=require("./core");var _util=require("../util");var _types=require("../types");function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function prepareJCard(line){const[name,props,type,value]=line;return{name,props:_extends({},props,{value:type}),value:Array.isArray(value)?value.join(","):value,group:null,errors:null}}function parseJCard(value){const[begin,content]=value;let errs=[];const{data,lineErrors}=content.reduce((0,_core).toData(prepareJCard),{data:{},lineErrors:[]});const version=data["version"][0].value;const versionErrs=(0,_util).validateVersion(version);if(!/vcard/i.test(begin))errs.push(new _types.VcfFormatError(`Invalid jCard: expected "VCARD" but found "${begin}"`,true));const errors=[...errs,...versionErrs,...lineErrors];const status=(0,_util).getStatus(errors);return{errors,data,meta:{format:"jcard",version,status}}}var _default=parseJCard;exports.default=_default
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9wYXJzaW5nL3BhcnNlSkNhcmQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdG9EYXRhIH0gZnJvbSBcIi4vY29yZVwiO1xuaW1wb3J0IHsgbWFrZUpzb24sIGdldFN0YXR1cywgdmFsaWRhdGVWZXJzaW9uIH0gZnJvbSBcIi4uL3V0aWxcIjtcbmltcG9ydCB7XG4gIExpbmUsXG4gIFBhcnNlT3B0aW9ucyxcbiAgUGFyc2VSZXN1bHQsXG4gIFZjZkZvcm1hdEVycm9yLFxuICBWY2ZWZXJzaW9uRXJyb3IsXG59IGZyb20gXCIuLi90eXBlc1wiO1xuXG5mdW5jdGlvbiBwcmVwYXJlSkNhcmQobGluZTogYW55W10pOiBMaW5lIHtcbiAgY29uc3QgW25hbWUsIHByb3BzLCB0eXBlLCB2YWx1ZV0gPSBsaW5lO1xuXG4gIHJldHVybiB7XG4gICAgbmFtZSxcbiAgICBwcm9wczogeyAuLi5wcm9wcywgdmFsdWU6IHR5cGUgfSxcbiAgICB2YWx1ZTogQXJyYXkuaXNBcnJheSh2YWx1ZSkgPyB2YWx1ZS5qb2luKFwiLFwiKSA6IHZhbHVlLFxuICAgIGdyb3VwOiBudWxsLFxuICAgIGVycm9yczogbnVsbCxcbiAgfTtcbn1cblxuZnVuY3Rpb24gcGFyc2VKQ2FyZCh2YWx1ZTogc3RyaW5nIHwgQnVmZmVyIHwgYW55KTogUGFyc2VSZXN1bHQge1xuICBjb25zdCBbYmVnaW4sIGNvbnRlbnRdID0gdmFsdWU7XG5cbiAgbGV0IGVycnM6IFBhcnNlUmVzdWx0W1wiZXJyb3JzXCJdID0gW107XG5cbiAgY29uc3QgeyBkYXRhLCBsaW5lRXJyb3JzIH0gPSBjb250ZW50LnJlZHVjZSh0b0RhdGEocHJlcGFyZUpDYXJkKSwge1xuICAgIGRhdGE6IHt9LFxuICAgIGxpbmVFcnJvcnM6IFtdLFxuICB9KTtcblxuICBjb25zdCB2ZXJzaW9uID0gZGF0YVtcInZlcnNpb25cIl1bMF0udmFsdWU7XG5cbiAgY29uc3QgdmVyc2lvbkVycnMgPSB2YWxpZGF0ZVZlcnNpb24odmVyc2lvbik7XG5cbiAgaWYgKCEvdmNhcmQvaS50ZXN0KGJlZ2luKSlcbiAgICBlcnJzLnB1c2goXG4gICAgICBuZXcgVmNmRm9ybWF0RXJyb3IoXG4gICAgICAgIGBJbnZhbGlkIGpDYXJkOiBleHBlY3RlZCBcIlZDQVJEXCIgYnV0IGZvdW5kIFwiJHtiZWdpbn1cImAsXG4gICAgICAgIHRydWVcbiAgICAgIClcbiAgICApO1xuXG4gIGNvbnN0IGVycm9ycyA9IFsuLi5lcnJzLCAuLi52ZXJzaW9uRXJycywgLi4ubGluZUVycm9yc107XG4gIGNvbnN0IHN0YXR1cyA9IGdldFN0YXR1cyhlcnJvcnMpO1xuXG4gIHJldHVybiB7XG4gICAgZXJyb3JzLFxuICAgIGRhdGEsXG4gICAgbWV0YToge1xuICAgICAgZm9ybWF0OiBcImpjYXJkXCIsXG4gICAgICB2ZXJzaW9uLFxuICAgICAgc3RhdHVzLFxuICAgIH0sXG4gIH07XG59XG5leHBvcnQgZGVmYXVsdCBwYXJzZUpDYXJkO1xuIl0sIm5hbWVzIjpbInByZXBhcmVKQ2FyZCIsImxpbmUiLCJuYW1lIiwicHJvcHMiLCJ0eXBlIiwidmFsdWUiLCJBcnJheSIsImlzQXJyYXkiLCJqb2luIiwiZ3JvdXAiLCJlcnJvcnMiLCJwYXJzZUpDYXJkIiwiYmVnaW4iLCJjb250ZW50IiwiZXJycyIsImRhdGEiLCJsaW5lRXJyb3JzIiwicmVkdWNlIiwidG9EYXRhIiwidmVyc2lvbiIsInZlcnNpb25FcnJzIiwidmFsaWRhdGVWZXJzaW9uIiwidGVzdCIsInB1c2giLCJWY2ZGb3JtYXRFcnJvciIsInN0YXR1cyIsImdldFN0YXR1cyIsIm1ldGEiLCJmb3JtYXQiXSwibWFwcGluZ3MiOiJBQUFBLDRGQUF1QixLQUFBLEtBQVEsU0FBUixRQUFRLENBQUEsQUFDc0IsS0FBQSxLQUFTLFNBQVQsU0FBUyxDQUFBLEFBT3ZELEtBQUEsTUFBVSxTQUFWLFVBQVUsQ0FBQSxxUkFFakIsU0FBU0EsWUFBWSxDQUFDQyxJQUFXLENBQVEsQ0FDdkMsS0FBTSxDQUFDQyxJQUFJLENBQUVDLEtBQUssQ0FBRUMsSUFBSSxDQUFFQyxLQUFLLENBQUMsQ0FBR0osSUFBSSxBQUFDLEFBRXhDLE9BQU8sQ0FDTEMsSUFBSSxDQUNKQyxLQUFLLENBQUUsWUFBS0EsS0FBSyxFQUFFRSxLQUFLLENBQUVELElBQUksRUFBRSxDQUNoQ0MsS0FBSyxDQUFFQyxLQUFLLENBQUNDLE9BQU8sQ0FBQ0YsS0FBSyxDQUFDLENBQUdBLEtBQUssQ0FBQ0csSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFHSCxLQUFLLENBQ3JESSxLQUFLLENBQUUsSUFBSSxDQUNYQyxNQUFNLENBQUUsSUFBSSxDQUNiLEFBQUMsQ0FDSCxBQUVELFNBQVNDLFVBQVUsQ0FBQ04sS0FBNEIsQ0FBZSxDQUM3RCxLQUFNLENBQUNPLEtBQUssQ0FBRUMsT0FBTyxDQUFDLENBQUdSLEtBQUssQUFBQyxBQUUvQixLQUFJUyxJQUFJLENBQTBCLEVBQUUsQUFBQyxBQUVyQyxNQUFNLENBQUVDLElBQUksQ0FBRUMsVUFBVSxDQUFFLENBQUdILE9BQU8sQ0FBQ0ksTUFBTSxDQUFDQyxDQUFBQSxFQUFBQSxLQUFNLEFBQWMsQ0FBQSxPQUFkLENBQUNsQixZQUFZLENBQUMsQ0FBRSxDQUNoRWUsSUFBSSxDQUFFLEVBQUUsQ0FDUkMsVUFBVSxDQUFFLEVBQUUsQ0FDZixDQUFDLEFBQUMsQUFFSCxPQUFNRyxPQUFPLENBQUdKLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQ1YsS0FBSyxBQUFDLEFBRXpDLE9BQU1lLFdBQVcsQ0FBR0MsQ0FBQUEsRUFBQUEsS0FBZSxBQUFTLENBQUEsZ0JBQVQsQ0FBQ0YsT0FBTyxDQUFDLEFBQUMsQUFFN0MsSUFBSSxDQUFDLFNBQVNHLElBQUksQ0FBQ1YsS0FBSyxDQUFDLENBQ3ZCRSxJQUFJLENBQUNTLElBQUksQ0FDUCxJQUFJQyxNQUFjLGVBQUEsQ0FDaEIsQ0FBQywyQ0FBMkMsRUFBRVosS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUN0RCxJQUFJLENBQ0wsQ0FDRixBQUFDLEFBRUosT0FBTUYsTUFBTSxDQUFHLElBQUlJLElBQUksSUFBS00sV0FBVyxJQUFLSixVQUFVLENBQUMsQUFBQyxBQUN4RCxPQUFNUyxNQUFNLENBQUdDLENBQUFBLEVBQUFBLEtBQVMsQUFBUSxDQUFBLFVBQVIsQ0FBQ2hCLE1BQU0sQ0FBQyxBQUFDLEFBRWpDLE9BQU8sQ0FDTEEsTUFBTSxDQUNOSyxJQUFJLENBQ0pZLElBQUksQ0FBRSxDQUNKQyxNQUFNLENBQUUsT0FBTyxDQUNmVCxPQUFPLENBQ1BNLE1BQU0sQ0FDUCxDQUNGLEFBQUMsQ0FDSCxhQUNjZCxVQUFVLHlCQUFDIn0=