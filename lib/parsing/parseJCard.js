"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _core=require("./core");var _util=require("../util");var _types=require("../types");function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function prepareJCard(line){const[name,props,type,value]=line;return{name,props:_extends({},props,{value:type}),value:Array.isArray(value)?value.join(","):value,group:null,errors:[]}}const getVersion=data=>{var ref;return(data==null?void 0:(ref=data.version)==null?void 0:ref.length)?data.version[0].value:null};function parseJCard(value){const[begin,content]=value;let errs=[];const{data,lineErrors}=content.reduce((0,_core).toData(prepareJCard),{data:{},lineErrors:[]});const version=getVersion(data);const versionErrs=(0,_util).validateVersion(version);if(!/vcard/i.test(begin))errs.push(new _types.VcfFormatError(`Invalid jCard: expected "VCARD" but found "${begin}"`,true));const errors=[...errs,...versionErrs,...lineErrors];const status=(0,_util).getStatus(errors);return{errors,data,meta:{format:"jcard",version,status}}}var _default=parseJCard;exports.default=_default
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9wYXJzaW5nL3BhcnNlSkNhcmQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdG9EYXRhIH0gZnJvbSBcIi4vY29yZVwiO1xuaW1wb3J0IHsgZ2V0U3RhdHVzLCB2YWxpZGF0ZVZlcnNpb24gfSBmcm9tIFwiLi4vdXRpbFwiO1xuaW1wb3J0IHsgTGluZSwgUGFyc2VSZXN1bHQsIFZjZkZvcm1hdEVycm9yIH0gZnJvbSBcIi4uL3R5cGVzXCI7XG5cbmZ1bmN0aW9uIHByZXBhcmVKQ2FyZChsaW5lOiBhbnlbXSk6IExpbmUge1xuICBjb25zdCBbbmFtZSwgcHJvcHMsIHR5cGUsIHZhbHVlXSA9IGxpbmU7XG5cbiAgcmV0dXJuIHtcbiAgICBuYW1lLFxuICAgIHByb3BzOiB7IC4uLnByb3BzLCB2YWx1ZTogdHlwZSB9LFxuICAgIHZhbHVlOiBBcnJheS5pc0FycmF5KHZhbHVlKSA/IHZhbHVlLmpvaW4oXCIsXCIpIDogdmFsdWUsXG4gICAgZ3JvdXA6IG51bGwsXG4gICAgZXJyb3JzOiBbXSxcbiAgfTtcbn1cblxuY29uc3QgZ2V0VmVyc2lvbiA9IChkYXRhOiBhbnkpID0+IGRhdGE/LnZlcnNpb24/Lmxlbmd0aCA/IGRhdGEudmVyc2lvblswXS52YWx1ZSA6IG51bGxcblxuZnVuY3Rpb24gcGFyc2VKQ2FyZCh2YWx1ZTogc3RyaW5nIHwgQnVmZmVyIHwgYW55KTogUGFyc2VSZXN1bHQge1xuICBjb25zdCBbYmVnaW4sIGNvbnRlbnRdID0gdmFsdWU7XG5cbiAgbGV0IGVycnM6IFBhcnNlUmVzdWx0W1wiZXJyb3JzXCJdID0gW107XG5cbiAgY29uc3QgeyBkYXRhLCBsaW5lRXJyb3JzIH0gPSBjb250ZW50LnJlZHVjZSh0b0RhdGEocHJlcGFyZUpDYXJkKSwge1xuICAgIGRhdGE6IHt9LFxuICAgIGxpbmVFcnJvcnM6IFtdLFxuICB9KTtcblxuICBjb25zdCB2ZXJzaW9uID0gZ2V0VmVyc2lvbihkYXRhKVxuXG4gIGNvbnN0IHZlcnNpb25FcnJzID0gdmFsaWRhdGVWZXJzaW9uKHZlcnNpb24pO1xuXG4gIGlmICghL3ZjYXJkL2kudGVzdChiZWdpbikpXG4gICAgZXJycy5wdXNoKFxuICAgICAgbmV3IFZjZkZvcm1hdEVycm9yKFxuICAgICAgICBgSW52YWxpZCBqQ2FyZDogZXhwZWN0ZWQgXCJWQ0FSRFwiIGJ1dCBmb3VuZCBcIiR7YmVnaW59XCJgLFxuICAgICAgICB0cnVlXG4gICAgICApXG4gICAgKTtcblxuICBjb25zdCBlcnJvcnMgPSBbLi4uZXJycywgLi4udmVyc2lvbkVycnMsIC4uLmxpbmVFcnJvcnNdO1xuICBjb25zdCBzdGF0dXMgPSBnZXRTdGF0dXMoZXJyb3JzKTtcblxuICByZXR1cm4ge1xuICAgIGVycm9ycyxcbiAgICBkYXRhLFxuICAgIG1ldGE6IHtcbiAgICAgIGZvcm1hdDogXCJqY2FyZFwiLFxuICAgICAgdmVyc2lvbixcbiAgICAgIHN0YXR1cyxcbiAgICB9LFxuICB9O1xufVxuZXhwb3J0IGRlZmF1bHQgcGFyc2VKQ2FyZDtcbiJdLCJuYW1lcyI6WyJwcmVwYXJlSkNhcmQiLCJsaW5lIiwibmFtZSIsInByb3BzIiwidHlwZSIsInZhbHVlIiwiQXJyYXkiLCJpc0FycmF5Iiwiam9pbiIsImdyb3VwIiwiZXJyb3JzIiwiZ2V0VmVyc2lvbiIsImRhdGEiLCJ2ZXJzaW9uIiwibGVuZ3RoIiwicGFyc2VKQ2FyZCIsImJlZ2luIiwiY29udGVudCIsImVycnMiLCJsaW5lRXJyb3JzIiwicmVkdWNlIiwidG9EYXRhIiwidmVyc2lvbkVycnMiLCJ2YWxpZGF0ZVZlcnNpb24iLCJ0ZXN0IiwicHVzaCIsIlZjZkZvcm1hdEVycm9yIiwic3RhdHVzIiwiZ2V0U3RhdHVzIiwibWV0YSIsImZvcm1hdCJdLCJtYXBwaW5ncyI6IkFBQUEsNEZBQXVCLEtBQUEsS0FBUSxTQUFSLFFBQVEsQ0FBQSxBQUNZLEtBQUEsS0FBUyxTQUFULFNBQVMsQ0FBQSxBQUNGLEtBQUEsTUFBVSxTQUFWLFVBQVUsQ0FBQSxxUkFFNUQsU0FBU0EsWUFBWSxDQUFDQyxJQUFXLENBQVEsQ0FDdkMsS0FBTSxDQUFDQyxJQUFJLENBQUVDLEtBQUssQ0FBRUMsSUFBSSxDQUFFQyxLQUFLLENBQUMsQ0FBR0osSUFBSSxBQUFDLEFBRXhDLE9BQU8sQ0FDTEMsSUFBSSxDQUNKQyxLQUFLLENBQUUsWUFBS0EsS0FBSyxFQUFFRSxLQUFLLENBQUVELElBQUksRUFBRSxDQUNoQ0MsS0FBSyxDQUFFQyxLQUFLLENBQUNDLE9BQU8sQ0FBQ0YsS0FBSyxDQUFDLENBQUdBLEtBQUssQ0FBQ0csSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFHSCxLQUFLLENBQ3JESSxLQUFLLENBQUUsSUFBSSxDQUNYQyxNQUFNLENBQUUsRUFBRSxDQUNYLEFBQUMsQ0FDSCxBQUVELE1BQU1DLFVBQVUsQ0FBRyxBQUFDQyxJQUFTLE9BQUtBLEdBQWEsQUFBYkEsT0FBQUEsQ0FBQUEsSUFBSSxNQUFTLENBQWJBLEtBQUFBLENBQWEsQ0FBYkEsQ0FBQUEsR0FBYSxDQUFiQSxJQUFJLENBQUVDLE9BQU8sT0FBQSxDQUFiRCxLQUFBQSxDQUFhLENBQWJBLEdBQWEsQ0FBRUUsTUFBTSxBQUFSLENBQUEsQ0FBV0YsSUFBSSxDQUFDQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUNSLEtBQUssQ0FBRyxJQUFJLENBQUEsQUFFdEYsVUFBU1UsVUFBVSxDQUFDVixLQUE0QixDQUFlLENBQzdELEtBQU0sQ0FBQ1csS0FBSyxDQUFFQyxPQUFPLENBQUMsQ0FBR1osS0FBSyxBQUFDLEFBRS9CLEtBQUlhLElBQUksQ0FBMEIsRUFBRSxBQUFDLEFBRXJDLE1BQU0sQ0FBRU4sSUFBSSxDQUFFTyxVQUFVLENBQUUsQ0FBR0YsT0FBTyxDQUFDRyxNQUFNLENBQUNDLENBQUFBLEVBQUFBLEtBQU0sQUFBYyxDQUFBLE9BQWQsQ0FBQ3JCLFlBQVksQ0FBQyxDQUFFLENBQ2hFWSxJQUFJLENBQUUsRUFBRSxDQUNSTyxVQUFVLENBQUUsRUFBRSxDQUNmLENBQUMsQUFBQyxBQUVILE9BQU1OLE9BQU8sQ0FBR0YsVUFBVSxDQUFDQyxJQUFJLENBQUMsQUFFaEMsT0FBTVUsV0FBVyxDQUFHQyxDQUFBQSxFQUFBQSxLQUFlLEFBQVMsQ0FBQSxnQkFBVCxDQUFDVixPQUFPLENBQUMsQUFBQyxBQUU3QyxJQUFJLENBQUMsU0FBU1csSUFBSSxDQUFDUixLQUFLLENBQUMsQ0FDdkJFLElBQUksQ0FBQ08sSUFBSSxDQUNQLElBQUlDLE1BQWMsZUFBQSxDQUNoQixDQUFDLDJDQUEyQyxFQUFFVixLQUFLLENBQUMsQ0FBQyxDQUFDLENBQ3RELElBQUksQ0FDTCxDQUNGLEFBQUMsQUFFSixPQUFNTixNQUFNLENBQUcsSUFBSVEsSUFBSSxJQUFLSSxXQUFXLElBQUtILFVBQVUsQ0FBQyxBQUFDLEFBQ3hELE9BQU1RLE1BQU0sQ0FBR0MsQ0FBQUEsRUFBQUEsS0FBUyxBQUFRLENBQUEsVUFBUixDQUFDbEIsTUFBTSxDQUFDLEFBQUMsQUFFakMsT0FBTyxDQUNMQSxNQUFNLENBQ05FLElBQUksQ0FDSmlCLElBQUksQ0FBRSxDQUNKQyxNQUFNLENBQUUsT0FBTyxDQUNmakIsT0FBTyxDQUNQYyxNQUFNLENBQ1AsQ0FDRixBQUFDLENBQ0gsYUFDY1osVUFBVSx5QkFBQyJ9